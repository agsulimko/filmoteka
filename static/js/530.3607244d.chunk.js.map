{"version":3,"file":"static/js/530.3607244d.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.params = {\n  api_key: '0649efc971b913d6bfebf656f94b5c92',\n  // language: 'en-US',\n};\n\nexport const getAllMoviesTrending = async (page, language, limit) => {\n  const { data } = await axios(`3/trending/movie/day`, {\n    params: {\n      page: page,\n      limit: limit,\n      //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n      //   language: 'en-US',\n      // language: 'uk-UA',\n      language: language,\n    },\n  });\n  // console.log('getAllMoviesTrending=', data);\n  return data;\n};\n\nexport const getMoviesTrending = async (moveId, language) => {\n  const { data } = await axios(`3/movie/${moveId}`, {\n    params: {\n      // page: page,\n      // limit: limit,\n      //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n      //   language: 'en-US',\n      // language: 'uk-UA',\n      language: language,\n    },\n  });\n  // console.log('getMoviesTrending=', data);\n  return data;\n};\n\nexport const getCast = async (moveId, language) => {\n  const { data } = await axios(`3/movie/${moveId}/credits`, {\n    params: {\n      // page: page,\n      // limit: limit,\n      //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n      //   language: 'en-US',\n      // language: 'uk-UA',\n      language: language,\n    },\n  });\n  // console.log('Cast=', data);\n  return data;\n};\n\nexport const getReviews = async (moveId, language) => {\n  const { data } = await axios(`3/movie/${moveId}/reviews`, {\n    params: {\n      // page: page,\n      // limit: limit,\n      //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n      //   language: 'en-US',\n      // language: 'uk-UA',\n      language: language,\n    },\n  });\n  // console.log('Reviews =', data);\n  return data;\n};\n\nexport const getVideos = async (moveId, language) => {\n  const { data } = await axios(`3/movie/${moveId}/videos`, {\n    params: {\n      // page: page,\n      // limit: limit,\n      //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n      //   language: 'en-US',\n      // language: 'uk-UA',\n      language: language,\n    },\n  });\n  // console.log('videos=', data);\n  return data;\n};\n\nexport const getAllMovies = async (value, page, language) => {\n  const { data } = await axios(`3/search/movie`, {\n    params: {\n      page: page,\n      // limit: limit,\n      // api_key: '0649efc971b913d6bfebf656f94b5c92',\n      // // language: 'en-US',\n      // original_language: 'en-US',\n      // query: `Jack + Reacher`,\n      query: `${value}`,\n      language: language,\n    },\n  });\n  // console.log(value);\n  // console.log('getAllMovies=>>', data);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listMovies\":\"Movies_listMovies__lbxuM\",\"divGoBack\":\"Movies_divGoBack__3khB4\",\"home\":\"Movies_home__7CsFj\",\"home_div\":\"Movies_home_div__Apmeb\",\"theme-light\":\"Movies_theme-light__qMBFh\",\"input\":\"Movies_input__N3yRL\",\"pagination\":\"Movies_pagination__0Ilwr\",\"span_pagination\":\"Movies_span_pagination__s8LSs\",\"selectedLanguage\":\"Movies_selectedLanguage__QPyZY\"};","import React, { useState, useEffect } from \"react\";\nimport { getAllMovies } from \"../api/api\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./Movies.module.css\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nimport { useSearchParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectLoading } from \"../redux/selectors\";\nimport Loader from \"components/Loader/Loader\";\nconst Movies = () => {\n  const location = useLocation();\n  const loading = useSelector(selectLoading);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [movies, setMovies] = useState([]);\n\n  // const [searchInput, setSearchInput] = useState(\"\");\n  // const [searchQuery, setSearchQuery] = useState(\"\");\n  // const [searchedMovies, setSearchedMovies] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useSearchParams();\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\n    localStorage.getItem(\"selectedLanguage\") || \"en-US\"\n  );\n  const query = searchQuery.get(\"query\") ?? \"\";\n\n  // const ref = useRef(query);\n\n  // const params = useParams();\n  // console.log(params);\n  const fetchMovies = async (page, language) => {\n    try {\n      const { results, total_pages } = await getAllMovies(\n        query,\n        page,\n        language\n      );\n\n      setMovies((prevMovies) => [...results]);\n      setTotalPages(total_pages);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    // Сохраняем выбранный язык в локальное хранилище при его изменении\n    localStorage.setItem(\"selectedLanguage\", selectedLanguage);\n    fetchMovies(currentPage, selectedLanguage);\n    // Функция для обработки события изменения в локальном хранилище\n    const handleStorageChange = (e) => {\n      if (e.key === \"selectedLanguage\") {\n        setSelectedLanguage(e.newValue);\n      }\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n\n    return () => {\n      window.removeEventListener(\"storage\", handleStorageChange);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, selectedLanguage]);\n\n  const handleInputQuery = (event) => {\n    const textInput = event.target.value.trim().toLowerCase();\n\n    if (textInput) {\n      setSearchQuery({ query: textInput });\n      setInputValue(textInput);\n    } else {\n      setSearchQuery({});\n      setInputValue(\"\");\n    }\n  };\n  //   // Если в event.target.value  пустой обьект то записываем {}}\n  //   // Если в event.target.value не пустой обьект то записываем (query: event.target.value)\n\n  // Вызывается при отправке формы\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!inputValue) {\n      alert(\"Enter your request\");\n\n      return;\n    }\n    fetchMovies();\n    setInputValue(\"\");\n  };\n\n  // console.log(location);\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n  };\n\n  return (\n    // <div className={css.divGoBack}>\n\n    <div className={css.divGoBack}>\n      <select\n        className={css.selectedLanguage}\n        value={selectedLanguage}\n        // onChange={handleLanguageChange}\n        onChange={(e) => setSelectedLanguage(e.target.value)}\n      >\n        <option value=\"en-US\">En</option>\n        <option value=\"de-DE\">De</option>\n        <option value=\"uk-UA\">Uk</option>\n        <option value=\"ru-RU\">Ru</option>\n        <option value=\"ar-SA\">العربية</option>\n      </select>\n\n      {/* <Link to=\"/\"> Go back</Link> */}\n      <form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            padding: \"10px 5px\",\n            gap: \"5px\",\n          }}\n        >\n          <TextField\n            className={css.input}\n            type=\"text\"\n            //  autocomplete=\"off\"\n            //  autofocus\n            //  placeholder=\"Search images and photos\"\n            name=\"title\"\n            size=\"small\"\n            sx={{ m: 1, width: \"35ch\", margin: 0 }}\n            style={{ backgroundColor: \"#7e7575\", color: \"white\" }}\n            // className=\"form-control\"\n            onChange={handleInputQuery}\n            value={query || \"\"}\n            // Устанавливаем пустую строку, если значение query равно null\n            id=\"input-with-sx\"\n            label=\"Search movies\"\n            variant=\"outlined\"\n\n            // margin=\"dense\"\n          />\n          <Button\n            className={css.button}\n            type=\"submit\"\n            variant=\"outlined\"\n            style={{\n              padding: \"6.5px\",\n            }}\n          >\n            Search\n          </Button>\n        </Box>\n\n        <Stack spacing={2} direction=\"row\"></Stack>\n      </form>\n\n      <ul className={css.listMovies}>\n        {movies.map((mov, index) => {\n          return (\n            <li key={index}>\n              <Link to={`/${mov.id}`} state={{ from: location }}>\n                <div className={css.home_div}>\n                  <img\n                    className=\"center-block img-responsive\"\n                    width=\"150px\"\n                    height=\"100%\"\n                    src={`https://image.tmdb.org/t/p/w500/${mov.poster_path}`}\n                    alt={mov.title}\n                    data-reactid=\".1.1.0.0.1.0.0.0\"\n                    key=\"movie-poster\"\n                  />\n                  {/* {mov.title} */}\n                  {`${mov.title} (${mov.release_date.slice(0, 4)})`}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className={css.pagination}>\n        <button onClick={handlePrevPage} disabled={currentPage === 1}>\n          Previous\n        </button>\n        <span className={css.span_pagination}>\n          Page {currentPage} of {totalPages}\n        </span>\n        <button onClick={handleNextPage} disabled={currentPage === totalPages}>\n          Next\n        </button>\n      </div>\n      {loading && <div>{Loader()}</div>}\n    </div>\n  );\n};\n\nexport default Movies;\n\n// 2 вариант без кнопки поиска\n// import React, { useState, useEffect } from \"react\";\n// import { getAllMovies } from \"../api/api\";\n// import { Link, useLocation, useParams } from \"react-router-dom\";\n// import css from \"./Movies.module.css\";\n\n// import TextField from \"@mui/material/TextField\";\n// import Box from \"@mui/material/Box\";\n// import Stack from \"@mui/material/Stack\";\n// import Button from \"@mui/material/Button\";\n\n// import { useSearchParams } from \"react-router-dom\";\n// const Movies = () => {\n//   const { moveId } = useParams();\n//   console.log(\"moveId=??????\", moveId);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get(\"query\") ?? \"\";\n//   // console.log(query);\n//   const [movies, setMovies] = useState([]);\n//   const [error, setError] = useState(null);\n//   const location = useLocation();\n//   // const params = useParams();\n//   // console.log(params);\n//   const fetchMovies = async () => {\n//     try {\n//       const { results } = await getAllMovies(query);\n//       //   console.log(results);\n//       setMovies((prevMovies) => [...results]);\n//     } catch (err) {\n//       setError(error.message);\n//     }\n//   };\n//   //   console.log(movies);\n//   useEffect(() => {\n//     fetchMovies();\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [query]);\n\n//   const updateQueryString = (event) => {\n//     const moviesIdVaiue = event.target.value.trim();\n//     if (moviesIdVaiue === \"\") {\n//       return setSearchParams({});\n//     }\n//     setSearchParams({ query: moviesIdVaiue });\n//     // Если в event.target.value  пустой обьект то записываем {}}\n//     // Если в event.target.value не пустой обьект то записываем (query: event.target.value)\n//   };\n//   // const visibleMovies = movies.filter((movie) => movie.includes(query));\n//   console.log(location);\n\n//   return (\n//     // <div className={css.divGoBack}>\n\n//     <div className={css.divGoBack}>\n//       <Link to=\"/\"> Go back</Link>\n//       <Box\n//         sx={{\n//           display: \"flex\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <TextField\n//           //  className=\"input\"\n//           type=\"text\"\n//           //  autocomplete=\"off\"\n//           //  autofocus\n//           //  placeholder=\"Search images and photos\"\n//           name=\"title\"\n//           size=\"small\"\n//           sx={{ m: 1, width: \"35ch\" }}\n//           style={{ backgroundColor: \"white\" }}\n//           className=\"form-control\"\n//           onChange={updateQueryString}\n//           value={query || \"\"} // Устанавливаем пустую строку, если значение query равно null\n//           id=\"input-with-sx\"\n//           label=\"Search movies\"\n//           variant=\"outlined\"\n//           margin=\"dense\"\n//         />\n//         <Button variant=\"outlined\">Search</Button>\n//       </Box>\n\n//       <Stack spacing={2} direction=\"row\"></Stack>\n\n//       <p>Movies страница</p>\n//       <ul className={css.listMovies}>\n//         {movies.map((movie, index) => {\n//           return (\n//             <li key={index}>\n//               <Link to={`${movie.id}`} state={{ from: location }}>\n//                 {movie.title}\n//               </Link>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     </div>\n//     // </div>\n//   );\n// };\n// export default Movies;\n"],"names":["axios","api_key","getMoviesTrending","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","moveId","language","_yield$axios2","data","_context2","prev","next","concat","params","sent","abrupt","stop","_x4","_x5","apply","arguments","getCast","_ref3","_callee3","_yield$axios3","_context3","_x6","_x7","getReviews","_ref4","_callee4","_yield$axios4","_context4","_x8","_x9","getVideos","_ref5","_callee5","_yield$axios5","_context5","_x10","_x11","getAllMovies","_ref6","_callee6","value","page","_yield$axios6","_context6","query","_x12","_x13","_x14","_searchQuery$get","location","useLocation","loading","useSelector","selectLoading","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","movies","setMovies","_useState7","_useState8","inputValue","setInputValue","_useSearchParams","useSearchParams","_useSearchParams2","searchQuery","setSearchQuery","_useState9","localStorage","getItem","_useState10","selectedLanguage","setSelectedLanguage","get","fetchMovies","_ref","_callee","_yield$getAllMovies","results","total_pages","_context","prevMovies","_toConsumableArray","t0","console","log","message","_x","_x2","useEffect","setItem","handleStorageChange","e","key","newValue","window","addEventListener","removeEventListener","_jsxs","className","css","children","onChange","target","_jsx","onSubmit","preventDefault","alert","Box","sx","display","alignItems","justifyContent","padding","gap","TextField","type","name","size","m","width","margin","style","backgroundColor","color","event","textInput","trim","toLowerCase","id","label","variant","Button","Stack","spacing","direction","map","mov","index","Link","to","state","from","height","src","poster_path","alt","title","release_date","slice","onClick","prevPage","disabled","Loader"],"sourceRoot":""}