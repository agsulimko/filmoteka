{"version":3,"file":"static/js/530.623ddc9a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divForm\":\"Movies_divForm__YQVdd\",\"box\":\"Movies_box__hd5an\",\"listMovies\":\"Movies_listMovies__lbxuM\",\"divGoBack\":\"Movies_divGoBack__3khB4\",\"home\":\"Movies_home__7CsFj\",\"home_div\":\"Movies_home_div__Apmeb\",\"theme-light\":\"Movies_theme-light__qMBFh\",\"input\":\"Movies_input__N3yRL\",\"pagination\":\"Movies_pagination__0Ilwr\",\"span_pagination\":\"Movies_span_pagination__s8LSs\",\"selectedLanguage\":\"Movies_selectedLanguage__QPyZY\"};","import React, { useState, useEffect } from \"react\";\nimport { getAllMovies } from \"../api/api\";\nimport { Link, useLocation, useOutletContext } from \"react-router-dom\";\nimport css from \"./Movies.module.css\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nimport { useSearchParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectLoading } from \"../redux/selectors\";\nimport Loader from \"components/Loader/Loader\";\nconst Movies = () => {\n  const location = useLocation();\n  const loading = useSelector(selectLoading);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [movies, setMovies] = useState([]);\n\n  // const [searchInput, setSearchInput] = useState(\"\");\n  // const [searchQuery, setSearchQuery] = useState(\"\");\n  // const [searchedMovies, setSearchedMovies] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useSearchParams();\n\n  // const [selectedLanguage, setSelectedLanguage] = useState(\n  //   localStorage.getItem(\"selectedLanguage\") || \"en-US\"\n  // );\n  const query = searchQuery.get(\"query\") ?? \"\";\n  const { selectedLanguage } = useOutletContext();\n  // const ref = useRef(query);\n\n  // const params = useParams();\n  // console.log(params);\n  const fetchMovies = async (page, language) => {\n    try {\n      const { results, total_pages } = await getAllMovies(\n        query,\n        page,\n        language\n      );\n\n      setMovies((prevMovies) => [...results]);\n      setTotalPages(total_pages);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    // Сохраняем выбранный язык в локальное хранилище при его изменении\n    localStorage.setItem(\"selectedLanguage\", selectedLanguage);\n    fetchMovies(currentPage, selectedLanguage);\n    // Функция для обработки события изменения в локальном хранилище\n    const handleStorageChange = (e) => {\n      // if (e.key === \"selectedLanguage\") {\n      //   setSelectedLanguage(e.newValue);\n      // }\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n\n    return () => {\n      window.removeEventListener(\"storage\", handleStorageChange);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, selectedLanguage]);\n\n  const handleInputQuery = (event) => {\n    const textInput = event.target.value.trim().toLowerCase();\n\n    if (textInput) {\n      setSearchQuery({ query: textInput });\n      setInputValue(textInput);\n    } else {\n      setSearchQuery({});\n      setInputValue(\"\");\n    }\n  };\n  //   // Если в event.target.value  пустой обьект то записываем {}}\n  //   // Если в event.target.value не пустой обьект то записываем (query: event.target.value)\n\n  // Вызывается при отправке формы\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!inputValue) {\n      alert(\"Enter your request\");\n\n      return;\n    }\n    fetchMovies();\n    setInputValue(\"\");\n  };\n\n  // console.log(location);\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n  };\n\n  return (\n    // <div className={css.divGoBack}>\n\n    <div className={css.divGoBack}>\n      {/* <Link to=\"/\"> Go back</Link> */}\n      <div className={css.divForm}>\n        <form onSubmit={handleSubmit}>\n          <Box\n            className={css.box}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: \"10px 2px\",\n              gap: \"5px\",\n            }}\n          >\n            <TextField\n              className={css.input}\n              type=\"text\"\n              //  autocomplete=\"off\"\n              //  autofocus\n              //  placeholder=\"Search images and photos\"\n              name=\"title\"\n              size=\"small\"\n              sx={{ m: 1, width: \"35ch\", margin: 0 }}\n              style={{ backgroundColor: \"#7e7575\", color: \"white\" }}\n              // className=\"form-control\"\n              onChange={handleInputQuery}\n              value={query || \"\"}\n              // Устанавливаем пустую строку, если значение query равно null\n              id=\"input-with-sx\"\n              label=\"Search movies\"\n              variant=\"outlined\"\n\n              // margin=\"dense\"\n            />\n            <Button\n              className={css.button}\n              type=\"submit\"\n              variant=\"outlined\"\n              style={{\n                padding: \"6.5px\",\n              }}\n            >\n              Search\n            </Button>\n          </Box>\n\n          <Stack spacing={2} direction=\"row\"></Stack>\n        </form>\n      </div>\n\n      <ul className={css.listMovies}>\n        {movies.map((mov, index) => {\n          return (\n            <li key={index}>\n              <Link to={`/${mov.id}`} state={{ from: location }}>\n                <div className={css.home_div}>\n                  <img\n                    className=\"center-block img-responsive\"\n                    width=\"150px\"\n                    height=\"100%\"\n                    src={`https://image.tmdb.org/t/p/w500/${mov.poster_path}`}\n                    alt={mov.title}\n                    data-reactid=\".1.1.0.0.1.0.0.0\"\n                    key=\"movie-poster\"\n                  />\n                  {/* {mov.title} */}\n                  {`${mov.title} (${mov.release_date.slice(0, 4)})`}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className={css.pagination}>\n        <button onClick={handlePrevPage} disabled={currentPage === 1}>\n          Previous\n        </button>\n        <span className={css.span_pagination}>\n          Page {currentPage} of {totalPages}\n        </span>\n        <button onClick={handleNextPage} disabled={currentPage === totalPages}>\n          Next\n        </button>\n      </div>\n      {loading && <div>{Loader()}</div>}\n    </div>\n  );\n};\n\nexport default Movies;\n\n// 2 вариант без кнопки поиска\n// import React, { useState, useEffect } from \"react\";\n// import { getAllMovies } from \"../api/api\";\n// import { Link, useLocation, useParams } from \"react-router-dom\";\n// import css from \"./Movies.module.css\";\n\n// import TextField from \"@mui/material/TextField\";\n// import Box from \"@mui/material/Box\";\n// import Stack from \"@mui/material/Stack\";\n// import Button from \"@mui/material/Button\";\n\n// import { useSearchParams } from \"react-router-dom\";\n// const Movies = () => {\n//   const { moveId } = useParams();\n//   console.log(\"moveId=??????\", moveId);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get(\"query\") ?? \"\";\n//   // console.log(query);\n//   const [movies, setMovies] = useState([]);\n//   const [error, setError] = useState(null);\n//   const location = useLocation();\n//   // const params = useParams();\n//   // console.log(params);\n//   const fetchMovies = async () => {\n//     try {\n//       const { results } = await getAllMovies(query);\n//       //   console.log(results);\n//       setMovies((prevMovies) => [...results]);\n//     } catch (err) {\n//       setError(error.message);\n//     }\n//   };\n//   //   console.log(movies);\n//   useEffect(() => {\n//     fetchMovies();\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [query]);\n\n//   const updateQueryString = (event) => {\n//     const moviesIdVaiue = event.target.value.trim();\n//     if (moviesIdVaiue === \"\") {\n//       return setSearchParams({});\n//     }\n//     setSearchParams({ query: moviesIdVaiue });\n//     // Если в event.target.value  пустой обьект то записываем {}}\n//     // Если в event.target.value не пустой обьект то записываем (query: event.target.value)\n//   };\n//   // const visibleMovies = movies.filter((movie) => movie.includes(query));\n//   console.log(location);\n\n//   return (\n//     // <div className={css.divGoBack}>\n\n//     <div className={css.divGoBack}>\n//       <Link to=\"/\"> Go back</Link>\n//       <Box\n//         sx={{\n//           display: \"flex\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <TextField\n//           //  className=\"input\"\n//           type=\"text\"\n//           //  autocomplete=\"off\"\n//           //  autofocus\n//           //  placeholder=\"Search images and photos\"\n//           name=\"title\"\n//           size=\"small\"\n//           sx={{ m: 1, width: \"35ch\" }}\n//           style={{ backgroundColor: \"white\" }}\n//           className=\"form-control\"\n//           onChange={updateQueryString}\n//           value={query || \"\"} // Устанавливаем пустую строку, если значение query равно null\n//           id=\"input-with-sx\"\n//           label=\"Search movies\"\n//           variant=\"outlined\"\n//           margin=\"dense\"\n//         />\n//         <Button variant=\"outlined\">Search</Button>\n//       </Box>\n\n//       <Stack spacing={2} direction=\"row\"></Stack>\n\n//       <p>Movies страница</p>\n//       <ul className={css.listMovies}>\n//         {movies.map((movie, index) => {\n//           return (\n//             <li key={index}>\n//               <Link to={`${movie.id}`} state={{ from: location }}>\n//                 {movie.title}\n//               </Link>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     </div>\n//     // </div>\n//   );\n// };\n// export default Movies;\n"],"names":["_searchQuery$get","location","useLocation","loading","useSelector","selectLoading","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","movies","setMovies","_useState7","_useState8","inputValue","setInputValue","_useSearchParams","useSearchParams","_useSearchParams2","searchQuery","setSearchQuery","query","get","selectedLanguage","useOutletContext","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","page","language","_yield$getAllMovies","results","total_pages","_context","prev","next","getAllMovies","sent","prevMovies","_toConsumableArray","t0","console","log","message","stop","_x","_x2","apply","arguments","useEffect","localStorage","setItem","handleStorageChange","e","window","addEventListener","removeEventListener","_jsxs","className","css","children","_jsx","onSubmit","preventDefault","alert","Box","sx","display","alignItems","justifyContent","padding","gap","TextField","type","name","size","m","width","margin","style","backgroundColor","color","onChange","event","textInput","target","value","trim","toLowerCase","id","label","variant","Button","Stack","spacing","direction","map","mov","index","Link","to","concat","state","from","height","src","poster_path","alt","title","release_date","slice","onClick","prevPage","disabled","Loader"],"sourceRoot":""}