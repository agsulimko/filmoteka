{"version":3,"file":"static/js/251.9822ecbc.chunk.js","mappings":"yOAsLA,UA1GgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,IAExBI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOC,MAAM,sCAADC,OACYrB,EAAO,qDAC7C,KAAD,EAFa,OAARc,EAAQG,EAAAK,KAAAL,EAAAE,KAAA,EAGYL,EAASS,OAAO,KAAD,EAAAR,EAAAE,EAAAK,KAAjCN,EAAOD,EAAPC,QACRQ,QAAQC,IAAIT,GACRA,EAAQU,OAAS,GAGnBnB,EAAUS,GACXC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEDO,QAAQI,MAAM,yBAAwBX,EAAAU,IAAS,yBAAAV,EAAAY,OAAA,GAAAhB,EAAA,mBAElD,kBAfgB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAiBjBtB,GACF,GAAG,CAACT,IAUJ,OAeEgC,EAAAA,EAAAA,KAAA,OAAAC,SAEG3B,EAAO4B,KAAI,SAACC,GAAK,OAChBH,EAAAA,EAAAA,KAAA,OAAAC,UA1BwBG,EA4BAD,EAAMC,MA1BhCA,EAAKC,SAAS,aACdD,EAAKC,SAAS,YACdD,EAAKC,SAAS,YACdD,EAAKC,SAAS,eAwBRC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAN,SAAA,EACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CACGE,EAAMC,KAAK,KACX,IAAII,KAAKL,EAAMM,cAAcC,mBAAmB,QAAS,CACxDC,IAAK,UACLC,MAAO,OACPC,KAAM,YACL,QAGLb,EAAAA,EAAAA,KAACc,IAAW,CACVC,IAAG,mCAAA1B,OAAqCc,EAAMa,KAC9CC,UAAQ,EAER,YAAU,eAjBRd,EAAMa,KA1BO,IAACZ,CA+DlB,KAgBd,C","sources":["components/Trailer.jsx"],"sourcesContent":["// // import { getTrailer } from \"../api/api\";\n// import { getVideos, getMoviesTrending } from \"api/api\";\n// import React, { useEffect, useState } from \"react\";\n// import ReactPlayer from \"react-player\";\n// import { useParams } from \"react-router-dom\";\n// // const { useParams } = require(\"react-router-dom\");\n\n// const Trailer = () => {\n//   const { movieId } = useParams();\n//   console.log(\"movieId=\", movieId);\n//   const [trailerMovies, setTrailer] = useState([]);\n//   //   const [imagesMovies, setImages] = useState([]);\n//   const [videos, setVideos] = useState([]);\n\n//   const fetchTrailer = async () => {\n//     try {\n//       const { homepage } = await getMoviesTrending(movieId);\n//       console.log(\"homepage=\", homepage);\n//       setTrailer(homepage);\n//       //   setTrailer((prevTrailer) => [...trailer]);\n//     } catch (err) {\n//       console.log(err.message);\n//     }\n//   };\n\n//   const fetchVideos = async () => {\n//     try {\n//       const results = await getVideos(movieId);\n//       console.log(\"Videos=\", results[0]);\n//       setVideos(results);\n//       //   setTrailer((prevTrailer) => [...trailer]);\n//     } catch (err) {\n//       console.log(err.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchVideos();\n//     fetchTrailer();\n\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, []);\n\n//   console.log(\"Videoss=\", videos);\n//   return (\n//     <div>\n//       <div> Watch Trailer:</div>\n//       {/* Проверяем, что есть ссылка на трейлер */}\n//       {trailerMovies && (\n//         <a href={trailerMovies} target=\"_blank\" rel=\"noopener noreferrer\">\n//           {/* Watch Trailer */}\n//           {trailerMovies}\n//         </a>\n//       )}\n\n//       {videos.map((video) => (\n//         <div key={video.key}>\n//           {/* <ReactPlayer\n//             url={`https://www.youtube.com/watch?v=${video.key}`}\n//             controls\n//             width=\"100%\"\n//             height=\"400px\"\n//           /> */}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n// export default Trailer;\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useParams } from \"react-router-dom\";\n// import ReactPlayer from \"react-player\";\n// const trailerType = \"Official Trailer\";\n\nconst Trailer = () => {\n  const { movieId } = useParams();\n  const [videos, setVideos] = useState([]);\n  //   const [videoId, setVideoId] = useState(null);\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=0649efc971b913d6bfebf656f94b5c92`\n        );\n        const { results } = await response.json();\n        console.log(results);\n        if (results.length > 0) {\n          //   setVideoId(results[0].key);\n\n          setVideos(results);\n        }\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n      }\n    };\n\n    fetchVideos();\n  }, [movieId]);\n\n  const hasOfficialOrTrailer = (name) => {\n    return (\n      name.includes(\"Official\") ||\n      name.includes(\"Trailer\") ||\n      name.includes(\"trailer\") ||\n      name.includes(\"official\")\n    );\n  };\n  return (\n    // <div>\n    //   <div>Trailers:</div>\n    //   {videos.length > 0 && (\n    //     <div>\n    //       <ReactPlayer\n    //         url={`https://www.youtube.com/watch?v=${videos[0].key}`}\n    //         controls\n    //         width=\"100%\"\n    //         height=\"400px\"\n    //       />\n    //     </div>\n    //   )}\n    // </div>\n\n    <div>\n      {/* <div>Trailer:</div> */}\n      {videos.map((video) => (\n        <div key={video.key}>\n          {/* {video.name === trailerType && ( */}\n          {hasOfficialOrTrailer(video.name) && (\n            <>\n              <h3>\n                {video.name} (\n                {new Date(video.published_at).toLocaleDateString(\"en-US\", {\n                  day: \"numeric\",\n                  month: \"long\",\n                  year: \"numeric\",\n                })}\n                )\n              </h3>\n              <ReactPlayer\n                url={`https://www.youtube.com/watch?v=${video.key}`}\n                controls\n                // width=\"100%\"\n                min-width=\"310px\"\n                // height=\"400px\"\n              />\n            </>\n          )}\n          {/* <h3>\n            {video.name} (\n            {new Date(video.published_at).toLocaleDateString(\"en-US\", {\n              day: \"numeric\",\n              month: \"long\",\n              year: \"numeric\",\n            })}\n            )\n          </h3> */}\n          {/* <ReactPlayer\n            url={`https://www.youtube.com/watch?v=${video.key}`}\n            controls\n            width=\"100%\"\n            height=\"400px\"\n          /> */}\n        </div>\n      ))}\n\n      {/* {videoId && (\n        <iframe\n          title=\"Trailer\"\n          width=\"310px\"\n          //   width=\"100%\"\n          //   height=\"400px\"\n          src={`https://www.youtube.com/embed/${videoId}`}\n          //   frameborder=\"0\"\n          //   allowfullscreen\n        ></iframe>\n      )} */}\n    </div>\n  );\n};\n\nexport default Trailer;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","videos","setVideos","useEffect","fetchVideos","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_yield$response$json","results","_context","prev","next","fetch","concat","sent","json","console","log","length","t0","error","stop","apply","arguments","_jsx","children","map","video","name","includes","_jsxs","_Fragment","Date","published_at","toLocaleDateString","day","month","year","ReactPlayer","url","key","controls"],"sourceRoot":""}