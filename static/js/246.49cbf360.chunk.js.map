{"version":3,"file":"static/js/246.49cbf360.chunk.js","mappings":"6NAIaA,GAAWC,EAAAA,EAAAA,IAAOC,IAAPD,CAAqBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,i2BAahC,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAM,IAkB7B,SAAAC,GAAQ,OAAAA,EAALH,MAAkBI,YAAY,IAUpC,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAM,I,SClBjD,EAxBmB,SAAHC,GAA6D,IAAvDE,EAASF,EAATE,UAAWC,EAAeH,EAAfG,gBAAiBC,EAAMJ,EAANI,OAAQC,EAAWL,EAAXK,YAKxD,OACEC,EAAAA,EAAAA,KAACf,EAAQ,CACPgB,YAAaF,EACbG,UAAU,OACVC,aARoB,SAACC,GACvBP,GAAeQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAAM,IAAEQ,KAAMF,EAAEG,SAAW,IAClD,EAOIX,UAAWA,EACXY,WAAW,MACXC,cAAc,OACdC,mBAAoB,EACpBC,qBAAsB,EACtBC,sBAAuB,KACvBC,aAAcC,OAAOC,SAAS,CAC5BC,IAAK,EACLC,SAAU,YAIlB,C,4FCxBA,GAAgB,UAAY,0BAA0B,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,WAAa,2BAA2B,WAAa,4B,+ECuJ/T,EAjDsB,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAqBC,EAAAA,EAAAA,MAArBD,iBACFE,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,KAAwB,GAC7CC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,KAAqB,EAEpDC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAElC,EAAekC,EAAA,GAC9BhC,EAAcmC,OAAOD,EAAaE,IAAI,UAAY,EASxD,OANAC,EAAAA,EAAAA,YAAU,WACRlB,GACEmB,EAAAA,EAAAA,IAAmB,CAAE/B,KAAMP,EAAauC,SAAUlB,IAEtD,GAAG,CAACF,EAAUE,EAAkBrB,KAG9BwC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAASC,SAAA,EACvB1C,EAAAA,EAAAA,KAAA,MAAA0C,SAAI,sGACHjB,IAAazB,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,KACnBlB,GAA+B,IAAlBH,EAAOsB,SAAgB5C,EAAAA,EAAAA,KAAA,OAAA0C,SAAK,6DAC3C1C,EAAAA,EAAAA,KAAA,MAAIwC,UAAWC,EAAAA,KAASC,SACrBpB,EAAOuB,KAAI,SAACC,GAAK,OAChBP,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACE1C,EAAAA,EAAAA,KAAA,KAAA0C,SAAII,EAAMC,QACV/C,EAAAA,EAAAA,KAAA,OACEgD,IACEF,EAAMG,aAAY,kCAAAC,OACoBJ,EAAMG,cACxC,mBAENE,IAAKL,EAAMC,SARND,EAAMM,GAUV,OAGP3B,GAAaE,EAAa,IAC1B3B,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CACTzD,UAAW+B,EACX9B,gBAAiBA,EACjBC,OAAQwD,OAAOC,YAAYtB,EAAauB,WACxCzD,YAAaA,EAAc,MAKrC,C","sources":["components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","webpack://react-homework-template/./src/pages/Actors.module.css?48ac","pages/Actors.jsx"],"sourcesContent":["// Pagination.styled.js\nimport styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const Paginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin: 10px 0;\n  font-size: 14px;\n\n  .selected {\n    border: 1px solid #ffffff;\n    border-radius: 50%;\n    background: #ecf0f3;\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n    text-shadow: 0.0625rem 0.0625rem 0.0625rem #fff;\n    color: ${props => props.theme.colors.accent};\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding: 2px;\n\n    width: 34px;\n    height: 34px;\n    border-radius: 50%;\n    text-align: center;\n\n    border: none;\n    outline: none;\n\n    box-shadow: ${({ theme }) => theme.buttonShadow};\n\n    text-shadow: 0 1px 1px #fff;\n    background-color: transparent;\n\n    cursor: pointer;\n\n    &:hover {\n      background: #ecf0f3;\n      box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n      color: ${props => props.theme.colors.accent};\n    }\n  }\n`;\n","// Pagination.jsx\nimport { Paginate } from \"./Pagination.styled\";\n\nconst Pagination = ({ pageCount, setSearchParams, params, currentPage }) => {\n  const handlePageClick = (e) => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <Paginate\n      initialPage={currentPage}\n      nextLabel=\"»\"\n      onPageChange={handlePageClick}\n      pageCount={pageCount}\n      breakLabel=\"...\"\n      previousLabel=\"«\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={1}\n      renderOnZeroPageCount={null}\n      onPageActive={window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      })}\n    />\n  );\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Actors_container__Bj5fp\",\"title\":\"Actors_title__OodyX\",\"list\":\"Actors_list__4EqC3\",\"item\":\"Actors_item__jps+j\",\"image\":\"Actors_image__xTha9\",\"name\":\"Actors_name__115gT\",\"rating\":\"Actors_rating__AITGP\",\"subtitle\":\"Actors_subtitle__iiyF7\",\"moviesList\":\"Actors_moviesList__63p9B\",\"pagination\":\"Actors_pagination__NbDQB\"};","//   // Вызовем функцию getPopularActors, передаем параметры page и language\n//   const fetchPopularActors = async () => {\n//     const actors = await getPopularActors(1, \"en-US\", 20); // Пример: 1 страница, 'en-US', 20 актеров\n//     console.log(\"getPopularActors =\", actors); // Выводим результат в консоль\n//   };\n\n//   fetchActors(); // Выполняем асинхронный запрос\n// }, []);import React, { useEffect } from \"react\";\n\n//////////////////////////////\n\n// import React, { useEffect, useState } from \"react\";\n// import css from \"./Actors.module.css\";\n// import { fetchPopularActors } from \"../redux/thunks\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useOutletContext } from \"react-router-dom\";\n// import {\n//   selectPopularActors,\n//   selectLoading,\n//   selectTotalPages,\n// } from \"../redux/selectors\";\n// import Button from \"@mui/material/Button\";\n// import { Loader } from \"components/Loader/Loader\";\n\n// const PopularActors = () => {\n//   const dispatch = useDispatch();\n//   const { selectedLanguage } = useOutletContext();\n//   const actors = useSelector(selectPopularActors) || [];\n//   const isLoading = useSelector(selectLoading);\n//   const totalPages = useSelector(selectTotalPages) || 1;\n\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   // Fetch actors when the component mounts or language/page changes\n//   useEffect(() => {\n//     dispatch(\n//       fetchPopularActors({ page: currentPage, language: selectedLanguage })\n//     );\n//   }, [dispatch, selectedLanguage, currentPage]);\n\n//   const handlePageChange = (newPage) => {\n//     if (newPage > 0 && newPage <= totalPages) {\n//       setCurrentPage(newPage);\n//     }\n//   };\n\n//   return (\n//     <div className={css.main}>\n//       <h1>Популярные актеры</h1>\n//       {isLoading && <Loader />}\n//       {!isLoading && actors.length === 0 && <div>Нет данных</div>}\n//       <ul className={css.list}>\n//         {actors.map((actor) => (\n//           <li key={actor.id}>\n//             <p>{actor.name}</p>\n//             <img\n//               src={\n//                 actor.profile_path\n//                   ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n//                   : \"/placeholder.png\"\n//               }\n//               alt={actor.name}\n//             />\n//           </li>\n//         ))}\n//       </ul>\n\n//       <div className={css.pagination}>\n//         <Button\n//           onClick={() => handlePageChange(currentPage - 1)}\n//           disabled={currentPage === 1}\n//         >\n//           Previous\n//         </Button>\n//         <span>{`Page ${currentPage} of ${totalPages}`}</span>\n//         <Button\n//           onClick={() => handlePageChange(currentPage + 1)}\n//           disabled={currentPage === totalPages}\n//         >\n//           Next\n//         </Button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PopularActors;\n\n// /////////////\n\nimport React, { useEffect } from \"react\";\nimport css from \"./Actors.module.css\";\nimport { fetchPopularActors } from \"../redux/thunks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchParams, useOutletContext } from \"react-router-dom\";\nimport {\n  selectPopularActors,\n  selectLoading,\n  selectTotalPages,\n} from \"../redux/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\nimport Pagination from \"components/Pagination/Pagination\";\n\nconst PopularActors = () => {\n  const dispatch = useDispatch();\n  const { selectedLanguage } = useOutletContext();\n  const actors = useSelector(selectPopularActors) || [];\n  const isLoading = useSelector(selectLoading);\n  const totalPages = useSelector(selectTotalPages) || 1;\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentPage = Number(searchParams.get(\"page\")) || 1;\n\n  // Fetch actors when the component mounts or language/page changes\n  useEffect(() => {\n    dispatch(\n      fetchPopularActors({ page: currentPage, language: selectedLanguage })\n    );\n  }, [dispatch, selectedLanguage, currentPage]);\n\n  return (\n    <div className={css.main}>\n      <h1>Популярные актеры</h1>\n      {isLoading && <Loader />}\n      {!isLoading && actors.length === 0 && <div>Нет данных</div>}\n      <ul className={css.list}>\n        {actors.map((actor) => (\n          <li key={actor.id}>\n            <p>{actor.name}</p>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : \"/placeholder.png\"\n              }\n              alt={actor.name}\n            />\n          </li>\n        ))}\n      </ul>\n      {!isLoading && totalPages > 1 && (\n        <Pagination\n          pageCount={totalPages}\n          setSearchParams={setSearchParams}\n          params={Object.fromEntries(searchParams.entries())}\n          currentPage={currentPage - 1} // ReactPaginate expects 0-based index\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PopularActors;\n"],"names":["Paginate","styled","ReactPaginate","_templateObject","_taggedTemplateLiteral","props","theme","colors","accent","_ref","buttonShadow","pageCount","setSearchParams","params","currentPage","_jsx","initialPage","nextLabel","onPageChange","e","_objectSpread","page","selected","breakLabel","previousLabel","pageRangeDisplayed","marginPagesDisplayed","renderOnZeroPageCount","onPageActive","window","scrollTo","top","behavior","dispatch","useDispatch","selectedLanguage","useOutletContext","actors","useSelector","selectPopularActors","isLoading","selectLoading","totalPages","selectTotalPages","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","Number","get","useEffect","fetchPopularActors","language","_jsxs","className","css","children","Loader","length","map","actor","name","src","profile_path","concat","alt","id","Pagination","Object","fromEntries","entries"],"sourceRoot":""}