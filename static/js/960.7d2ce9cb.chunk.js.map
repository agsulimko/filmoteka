{"version":3,"file":"static/js/960.7d2ce9cb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Trailer.module.css?4b70","components/Trailer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoreTrailersNot\":\"Trailer_MoreTrailersNot__-G5PT\",\"container\":\"Trailer_container__YQhfz\",\"DivMoreTrailes\":\"Trailer_DivMoreTrailes__VM3he\",\"ButtonTrailes\":\"Trailer_ButtonTrailes__hkduq\",\"DivButtonTrailes\":\"Trailer_DivButtonTrailes__tUZOB\",\"DivPlayerName\":\"Trailer_DivPlayerName__Dg3Wl\",\"h5\":\"Trailer_h5__CHP0J\",\"DivPlayer1\":\"Trailer_DivPlayer1__7yMRX\",\"h5_Title\":\"Trailer_h5_Title__3Wm0B\",\"DivPlayer\":\"Trailer_DivPlayer__6K-E9\"};","// Trailer.jsx\nimport React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useParams, useOutletContext } from \"react-router-dom\";\nimport css from \"./Trailer.module.css\";\nimport styled from \"styled-components\";\nimport { getVideos } from \"api/api\";\n\nconst StyledReactPlayer = styled(ReactPlayer)`\n  margin: 0 auto 10px auto;\n  max-width: 100%;\n  height: auto;\n`;\n\nconst Trailer = () => {\n  const { movieId } = useParams();\n  const { selectedLanguage } = useOutletContext();\n  const [videos, setVideos] = useState([]);\n  const [videoKey, setVideoKey] = useState(null);\n\n  // Функция для загрузки видео с выбранным языком\n  const fetchVideos = async (language) => {\n    try {\n      const { results } = await getVideos(movieId, language);\n      setVideos(results); // Обновляем состояние videos с новым списком видео\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVideos(selectedLanguage);\n    // eslint-disable-next-line\n  }, [movieId, selectedLanguage]);\n\n  const hasOfficialOrTrailer = (name) => {\n    return (\n      name.includes(\"Official\") ||\n      name.includes(\"Trailer\") ||\n      name.includes(\"trailer\") ||\n      name.includes(\"official\") ||\n      name.includes(\"трейлер\") ||\n      name.includes(\"Трейлер\")\n    );\n  };\n\n  const playVideo = (key) => {\n    setVideoKey(key);\n  };\n\n  return (\n    <>\n      <div>\n        {videos.map((video) => (\n          <div key={video.key} className={css.DivPlayer1}>\n            {hasOfficialOrTrailer(video.name) && (\n              <div className={css.DivPlayer}>\n                <h5 className={css.h5}>\n                  {video.name} (\n                  {new Date(video.published_at).toLocaleDateString(\"en-US\", {\n                    day: \"numeric\",\n                    month: \"long\",\n                    year: \"numeric\",\n                  })}\n                  )\n                </h5>\n                <StyledReactPlayer\n                  url={`https://www.youtube.com/watch?v=${video.key}`}\n                  controls\n                />\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className={css.DivMoreTrailes}>\n        {videos.map((video) => (\n          <div key={video.key}>\n            {!hasOfficialOrTrailer(video.name) && (\n              <div className={css.DivPlayerName}>\n                <div className={css.DivButtonTrailes}>\n                  <button\n                    className={css.ButtonTrailes}\n                    onClick={() => playVideo(video.key)}\n                  >\n                    Play Video\n                  </button>\n                  <h5 className={css.h5_Title}>\n                    {video.name} (\n                    {new Date(video.published_at).toLocaleDateString(\"en-US\", {\n                      day: \"numeric\",\n                      month: \"long\",\n                      year: \"numeric\",\n                    })}\n                    )\n                  </h5>\n                </div>\n                {videoKey === video.key && (\n                  <StyledReactPlayer\n                    className={css.Player}\n                    url={`https://www.youtube.com/watch?v=${video.key}`}\n                    controls\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        ))}\n        {videos.length === 0 && (\n          <h4> We don't have any more trailers for this movie.</h4>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Trailer;\n\n/* {videoId && (\n        <iframe\n          title=\"Trailer\"\n          width=\"310px\"\n          //   width=\"100%\"\n          //   height=\"400px\"\n          src={`https://www.youtube.com/embed/${videoId}`}\n          //   frameborder=\"0\"\n          //   allowfullscreen\n        ></iframe>\n      )} */\n"],"names":["StyledReactPlayer","styled","ReactPlayer","_templateObject","_taggedTemplateLiteral","movieId","useParams","selectedLanguage","useOutletContext","_useState","useState","_useState2","_slicedToArray","videos","setVideos","_useState3","_useState4","videoKey","setVideoKey","fetchVideos","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","language","_yield$getVideos","results","_context","prev","next","getVideos","sent","t0","console","error","stop","_x","apply","arguments","useEffect","hasOfficialOrTrailer","name","includes","_jsxs","_Fragment","children","_jsx","map","video","className","css","Date","published_at","toLocaleDateString","day","month","year","url","concat","key","controls","onClick","length"],"sourceRoot":""}