{"version":3,"file":"static/js/530.50332ddb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputLabel\":\"Movies_inputLabel__doosp\",\"divForm\":\"Movies_divForm__YQVdd\",\"listMovies\":\"Movies_listMovies__lbxuM\",\"divGoBack\":\"Movies_divGoBack__3khB4\",\"home\":\"Movies_home__7CsFj\",\"home_div\":\"Movies_home_div__Apmeb\",\"pagination\":\"Movies_pagination__0Ilwr\",\"span_pagination\":\"Movies_span_pagination__s8LSs\",\"selectedLanguage\":\"Movies_selectedLanguage__QPyZY\",\"box\":\"Movies_box__hd5an\",\"button\":\"Movies_button__q3Y5z\"};","// Movies.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useOutletContext } from \"react-router-dom\";\nimport css from \"./Movies.module.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllMovies, fetchDefaultMovies } from \"../redux/thunks\";\nimport {\n  selectAllMovies,\n  selectLoading,\n  selectTotalPages,\n  selectDefaultMovies,\n} from \"../redux/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { toast } from \"react-hot-toast\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\nconst Movies = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const movies = useSelector(selectAllMovies) || [];\n  //\n  const defaultMovies = useSelector(selectDefaultMovies) || [];\n\n  const totalPages = useSelector(selectTotalPages);\n  const loading = useSelector(selectLoading);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useSearchParams();\n\n  const query = searchQuery.get(\"query\") ?? \"\";\n  const { selectedLanguage } = useOutletContext();\n\n  useEffect(() => {\n    setCurrentPage(1);\n    dispatch(\n      fetchDefaultMovies({\n        page: 1,\n        language: selectedLanguage,\n      })\n    );\n  }, [dispatch, selectedLanguage]);\n\n  // useEffect(() => {\n  //   const fetchMovies = ({\n  //     query,\n  //     page: currentPage,\n  //     language: selectedLanguage,\n  //   }) => {\n  //     dispatch(\n  //       fetchAllMovies({\n  //         query,\n  //         page: currentPage,\n  //         language: selectedLanguage,\n  //       })\n  //     );\n  //   };\n\n  useEffect(() => {\n    if (query) {\n      dispatch(\n        fetchAllMovies({\n          query,\n          page: currentPage,\n          language: selectedLanguage,\n        })\n      );\n    } else {\n      dispatch(\n        fetchDefaultMovies({\n          page: currentPage,\n          language: selectedLanguage,\n        })\n      );\n    }\n  }, [dispatch, currentPage, selectedLanguage, query]);\n  //   fetchMovies({\n  //     query,\n  //     page: currentPage,\n  //     language: selectedLanguage,\n  //   });\n  // }, [dispatch, currentPage, selectedLanguage, query]);\n\n  // useEffect(() => {\n  //   dispatch(\n  //     fetchAllMovies({ query, page: currentPage, language: selectedLanguage })\n  //   );\n  // }, [dispatch, currentPage, selectedLanguage, query]);\n\n  const handleInputQuery = (event) => {\n    const textInput = event.target.value.trim().toLowerCase();\n    setInputValue(textInput);\n  };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n\n  //   if (!inputValue) {\n  //     alert(\"Enter your request\");\n  //     return;\n  //   }\n\n  //   setCurrentPage(1);\n  //   setSearchQuery({ query: inputValue });\n  // };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const theme = localStorage.getItem(\"theme\");\n    if (!inputValue) {\n      setSearchQuery({ query: \"\" });\n\n      toast.error(\"Enter your request\", {\n        autoClose: 5000,\n        position: \"top-center\",\n\n        style: {\n          marginTop: \"130px\",\n          // background: \"#efede8\",\n          background: theme === \"theme-dark\" ? \"#333\" : \"#efede8\",\n          color: theme === \"theme-dark\" ? \"#fff\" : \"#000\",\n        },\n      });\n      return;\n    } else {\n      setCurrentPage(1);\n      setSearchQuery({ query: inputValue });\n    }\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n    dispatch(\n      fetchDefaultMovies({ page: currentPage * 2, language: selectedLanguage })\n    );\n  };\n\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n    dispatch(\n      fetchDefaultMovies({\n        page: (currentPage - 1) * 2,\n        language: selectedLanguage,\n      })\n    );\n  };\n\n  return (\n    <div className={css.divGoBack}>\n      <div className={css.divForm}>\n        <form onSubmit={handleSubmit}>\n          <Box\n            className=\"box\"\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: \"10px 1.5px\",\n              gap: \"5px\",\n              \"@media screen and (min-width: 768px)\": {\n                paddingLeft: \"168px\",\n                paddingRight: \"168px\",\n              },\n              \"@media screen and (min-width: 1440px)\": {\n                paddingLeft: \"498px\",\n                paddingRight: \"498px\",\n              },\n            }}\n          >\n            <TextField\n              className=\"input\"\n              type=\"text\"\n              name=\"title\"\n              size=\"small\"\n              sx={{\n                m: 1,\n                width: \"35ch\",\n                margin: 0,\n                borderRadius: \"4px\",\n                // \"& fieldset\": {\n                //   border: \"none\",\n                //   // Border color for the outlined input\n                // },\n              }}\n              style={{\n                backgroundColor: \"#7e7575\",\n                color: \"white\",\n              }}\n              // #c7dfee #7e7575\n              InputLabelProps={{\n                // style: { zIndex: 100000 },\n                className: css.inputLabel,\n              }}\n              onChange={handleInputQuery}\n              value={inputValue}\n              id=\"input-with-sx\"\n              label=\"Search movies\"\n              variant=\"outlined\"\n            />\n            <Button\n              className=\"custom-button\"\n              type=\"submit\"\n              variant=\"outlined\"\n              sx={{\n                padding: \"6px 125px\",\n                \"@media screen and (min-width: 768px)\": {\n                  padding: \"6px\",\n                },\n              }}\n            >\n              Search\n            </Button>\n          </Box>\n          <Stack spacing={2} direction=\"row\"></Stack>\n        </form>\n      </div>\n\n      <ul className={css.listMovies}>\n        {(!query ? defaultMovies : movies).map((mov, index) => (\n          <li key={index}>\n            {loading && <Loader />}\n            <Link to={`/${mov.id}`} state={{ from: location }}>\n              <div className={css.home_div}>\n                <img\n                  className=\"center-block img-responsive\"\n                  width=\"150px\"\n                  height=\"100%\"\n                  src={`https://image.tmdb.org/t/p/w500/${mov.poster_path}`}\n                  alt={mov.title}\n                  key=\"movie-poster\"\n                />\n                {`${mov.title} (${mov.release_date.slice(0, 4)})`}\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      <div className={css.pagination}>\n        <button onClick={handlePrevPage} disabled={currentPage === 1}>\n          Previous\n        </button>\n        <span className={css.span_pagination}>\n          Page {currentPage} of {totalPages}\n        </span>\n        <button onClick={handleNextPage} disabled={currentPage === totalPages}>\n          Next\n        </button>\n      </div>\n      {loading && <Loader />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_searchQuery$get","location","useLocation","dispatch","useDispatch","movies","useSelector","selectAllMovies","defaultMovies","selectDefaultMovies","totalPages","selectTotalPages","loading","selectLoading","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","inputValue","setInputValue","_useSearchParams","useSearchParams","_useSearchParams2","searchQuery","setSearchQuery","query","get","selectedLanguage","useOutletContext","useEffect","fetchDefaultMovies","page","language","fetchAllMovies","_jsxs","className","css","children","_jsx","onSubmit","e","preventDefault","theme","localStorage","getItem","toast","autoClose","position","style","marginTop","background","color","Box","sx","display","alignItems","justifyContent","padding","gap","paddingLeft","paddingRight","TextField","type","name","size","m","width","margin","borderRadius","backgroundColor","InputLabelProps","onChange","event","textInput","target","value","trim","toLowerCase","id","label","variant","Button","Stack","spacing","direction","map","mov","index","Loader","Link","to","concat","state","from","height","src","poster_path","alt","title","release_date","slice","onClick","prevPage","disabled"],"sourceRoot":""}