{"version":3,"file":"static/js/246.1061dd2a.chunk.js","mappings":"kMACA,GAAgB,UAAY,0BAA0B,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,WAAa,4B,iDCgDvR,EA/BsB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAqBC,EAAAA,EAAAA,MAArBD,iBACFE,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,KAAwB,GAC7CC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAM9B,OAJAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAmB,CAAEC,KAAM,EAAGC,SAAUV,IACnD,GAAG,CAACF,EAAUE,IAEVK,GAAkBM,EAAAA,EAAAA,KAAA,OAAAC,SAAK,wDACtBV,EAAOW,QAGVC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAASJ,SAAA,EACvBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uGACJD,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAAA,KAASJ,SACrBV,EAAOe,KAAI,SAACC,GAAK,OAChBJ,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CACGM,EAAMC,MACPR,EAAAA,EAAAA,KAAA,OACES,IAAG,kCAAAC,OAAoCH,EAAMI,cAC7CC,IAAKL,EAAMC,SAJND,EAAMM,GAMV,UAbcb,EAAAA,EAAAA,KAAA,OAAAC,SAAK,2DAkBlC,C","sources":["webpack://react-homework-template/./src/pages/Actors.module.css?48ac","pages/Actors.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Actors_container__Bj5fp\",\"title\":\"Actors_title__OodyX\",\"list\":\"Actors_list__4EqC3\",\"item\":\"Actors_item__jps+j\",\"image\":\"Actors_image__xTha9\",\"name\":\"Actors_name__115gT\",\"rating\":\"Actors_rating__AITGP\",\"subtitle\":\"Actors_subtitle__iiyF7\",\"moviesList\":\"Actors_moviesList__63p9B\"};","//   // Вызовем функцию getPopularActors, передаем параметры page и language\n//   const fetchPopularActors = async () => {\n//     const actors = await getPopularActors(1, \"en-US\", 20); // Пример: 1 страница, 'en-US', 20 актеров\n//     console.log(\"getPopularActors =\", actors); // Выводим результат в консоль\n//   };\n\n//   fetchActors(); // Выполняем асинхронный запрос\n// }, []);import React, { useEffect } from \"react\";\n\n//////////////////////////////\n\nimport React, { useEffect } from \"react\";\nimport css from \"./Actors.module.css\";\nimport { fetchPopularActors } from \"../redux/thunks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { selectPopularActors, selectLoading } from \"../redux/selectors\";\n\nconst PopularActors = () => {\n  const dispatch = useDispatch();\n  const { selectedLanguage } = useOutletContext();\n  const actors = useSelector(selectPopularActors) || [];\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchPopularActors({ page: 1, language: selectedLanguage }));\n  }, [dispatch, selectedLanguage]);\n\n  if (isLoading) return <div>Загрузка...</div>;\n  if (!actors.length) return <div>Нет данных</div>;\n\n  return (\n    <div className={css.main}>\n      <h1>Популярные актеры</h1>\n      <ul className={css.list}>\n        {actors.map((actor) => (\n          <li key={actor.id}>\n            {actor.name}\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={actor.name}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PopularActors;\n\n// import css from \"./Actors.module.css\";\n\n// import { fetchPopularActors } from \"../redux/thunks\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useOutletContext } from \"react-router-dom\";\n// import { selectPopularActors } from \"redux/selectors\";\n// const PopularActors = () => {\n//   const dispatch = useDispatch();\n//   const { selectedLanguage } = useOutletContext();\n//   const actors = useSelector(selectPopularActors) || [];\n//   useEffect(() => {\n//     dispatch(\n//       fetchPopularActors({\n//         page: 1,\n//         language: selectedLanguage,\n//       })\n//     );\n//   }, [dispatch, selectedLanguage]);\n\n//   return (\n//     <div className={css.main}>\n//       <h1>Популярные актеры</h1>\n//       <ul>\n//         {actors.map((actor) => (\n//           <li key={actor.id}>\n//             {actor.name}\n//             <img\n//               src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n//               alt={actor.name}\n//             />\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default PopularActors;\n\n// import React, { useEffect, useState } from \"react\";\n// import css from \"./Actors.module.css\";\n// import { getPopularActors, getActorMovies } from \"../api\";\n\n// const Actors = () => {\n//   const [actors, setActors] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchActors = async () => {\n//       try {\n//         const popularActors = await getPopularActors(1, \"en-US\");\n//         const sortedActors = popularActors.sort(\n//           (a, b) => a.popularity - b.popularity\n//         );\n//         setActors(sortedActors);\n//       } catch (error) {\n//         setError(\"Failed to fetch actors data.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchActors();\n//   }, []);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>{error}</p>;\n\n//   return (\n//     <div className={css.container}>\n//       <h1 className={css.title}>Actors</h1>\n//       <ul className={css.list}>\n//         {actors.map((actor) => (\n//           <li key={actor.id} className={css.item}>\n//             <img\n//               src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n//               alt={actor.name}\n//               className={css.image}\n//             />\n//             <h2 className={css.name}>{actor.name}</h2>\n//             <p className={css.rating}>Rating: {actor.popularity.toFixed(1)}</p>\n//             <h3 className={css.subtitle}>Movies:</h3>\n//             <MoviesList actorId={actor.id} />\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const MoviesList = ({ actorId }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchMovies = async () => {\n//       try {\n//         const actorMovies = await getActorMovies(actorId, \"en-US\");\n//         setMovies(actorMovies);\n//       } catch (error) {\n//         console.error(\"Failed to fetch movies\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchMovies();\n//   }, [actorId]);\n\n//   if (loading) return <p>Loading movies...</p>;\n\n//   return (\n//     <ul className={css.moviesList}>\n//       {movies.map((movie) => (\n//         <li key={movie.id}>{movie.title}</li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// export default Actors;\n"],"names":["dispatch","useDispatch","selectedLanguage","useOutletContext","actors","useSelector","selectPopularActors","isLoading","selectLoading","useEffect","fetchPopularActors","page","language","_jsx","children","length","_jsxs","className","css","map","actor","name","src","concat","profile_path","alt","id"],"sourceRoot":""}