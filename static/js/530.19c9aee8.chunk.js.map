{"version":3,"file":"static/js/530.19c9aee8.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","pages/Home.styled.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["// Pagination.styled.js\nimport styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const Paginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin: 10px 0;\n  font-size: 14px;\n\n  .selected {\n    border: 1px solid #ffffff;\n    border-radius: 50%;\n    background: #ecf0f3;\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n    text-shadow: 0.0625rem 0.0625rem 0.0625rem #fff;\n    color: ${props => props.theme.colors.accent};\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding: 2px;\n\n    width: 34px;\n    height: 34px;\n    border-radius: 50%;\n    text-align: center;\n\n    border: none;\n    outline: none;\n\n    box-shadow: ${({ theme }) => theme.buttonShadow};\n\n    text-shadow: 0 1px 1px #fff;\n    background-color: transparent;\n\n    cursor: pointer;\n\n    &:hover {\n      background: #ecf0f3;\n      box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n      color: ${props => props.theme.colors.accent};\n    }\n  }\n`;\n","// Pagination.jsx\nimport { Paginate } from \"./Pagination.styled\";\n\nconst Pagination = ({ pageCount, setSearchParams, params, currentPage }) => {\n  const handlePageClick = (e) => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <Paginate\n      initialPage={currentPage}\n      nextLabel=\"»\"\n      onPageChange={handlePageClick}\n      pageCount={pageCount}\n      breakLabel=\"...\"\n      previousLabel=\"«\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={1}\n      renderOnZeroPageCount={null}\n      onPageActive={window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      })}\n    />\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\n\nconst Select = styled.select`\n  /* background-color: ${({ isDarkTheme }) =>\n    isDarkTheme ? 'green' : 'red'};*/\n  z-index: 100000;\n`;\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  display: ${({ $visible }) => ($visible ? 'block' : 'none')};\n  /* display: ${props => (props.visible ? 'block' : 'none')}; */\n  background-color: #3470ff;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  font-size: 24px;\n  line-height: 50px;\n  text-align: center;\n  z-index: 10001;\n`;\nexport { Select, BackToTopButton };\n","// extracted by mini-css-extract-plugin\nexport default {\"divForm\":\"Movies_divForm__YQVdd\",\"listMovies\":\"Movies_listMovies__lbxuM\",\"divGoBack\":\"Movies_divGoBack__3khB4\",\"home\":\"Movies_home__7CsFj\",\"home_div\":\"Movies_home_div__Apmeb\",\"pagination\":\"Movies_pagination__0Ilwr\",\"span_pagination\":\"Movies_span_pagination__s8LSs\",\"selectedLanguage\":\"Movies_selectedLanguage__QPyZY\",\"box\":\"Movies_box__hd5an\",\"button\":\"Movies_button__q3Y5z\"};","// // Movies.jsx с пагинацией\n\n// Movies.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useOutletContext } from \"react-router-dom\";\nimport css from \"./Movies.module.css\";\nimport { BackToTopButton } from \"./Home.styled\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllMovies, fetchDefaultMovies } from \"../redux/thunks\";\nimport {\n  selectAllMovies,\n  selectLoading,\n  selectTotalPages,\n  selectDefaultMovies,\n} from \"../redux/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\nimport Pagination from \"components/Pagination/Pagination\"; //\nimport { toast } from \"react-hot-toast\";\n\nconst Movies = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const movies = useSelector(selectAllMovies) || [];\n  const defaultMovies = useSelector(selectDefaultMovies) || [];\n  const totalPages = useSelector(selectTotalPages) || 1;\n  const loading = useSelector(selectLoading);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get(\"query\") ?? \"\";\n  const [showBackToTop, setShowBackToTop] = useState(false);\n  const { selectedLanguage } = useOutletContext();\n\n  // Fetch movies on mount or query/language change\n  useEffect(() => {\n    setCurrentPage(1);\n    if (query) {\n      dispatch(\n        fetchAllMovies({\n          query,\n          page: 1,\n          language: selectedLanguage,\n        })\n      );\n    } else {\n      dispatch(\n        fetchDefaultMovies({\n          page: 1,\n          language: selectedLanguage,\n        })\n      );\n    }\n  }, [dispatch, selectedLanguage, query]);\n\n  // Infinite scroll for default movies\n  useEffect(() => {\n    if (!query) {\n      const handleScroll = () => {\n        if (\n          window.innerHeight + document.documentElement.scrollTop >=\n            document.documentElement.offsetHeight - 300 &&\n          !loading &&\n          currentPage < totalPages\n        ) {\n          setCurrentPage((prevPage) => prevPage + 1);\n        }\n      };\n\n      setShowBackToTop(window.scrollY > 100);\n      window.addEventListener(\"scroll\", handleScroll);\n      return () => window.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [dispatch, loading, currentPage, totalPages, query, selectedLanguage]);\n\n  // Fetch movies for pagination\n  useEffect(() => {\n    if (currentPage > 1 && currentPage <= totalPages) {\n      if (query) {\n        dispatch(\n          fetchAllMovies({\n            query,\n            page: currentPage,\n            language: selectedLanguage,\n          })\n        );\n      } else {\n        dispatch(\n          fetchDefaultMovies({\n            page: currentPage,\n            language: selectedLanguage,\n          })\n        );\n      }\n    }\n  }, [dispatch, currentPage, selectedLanguage, query, totalPages]);\n\n  // Handle search input\n  const handleInputQuery = (event) => {\n    setInputValue(event.target.value.trim().toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputValue) {\n      setSearchQuery({ query: \"\" });\n      toast.error(\"Enter your request\");\n      return;\n    }\n    setCurrentPage(1);\n    setSearchQuery({ query: inputValue });\n  };\n\n  const handleBackToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    setShowBackToTop(false);\n  };\n\n  // const handlePageChange = (newPage) => {\n  //   if (newPage > 0 && newPage <= totalPages) {\n  //     setCurrentPage(newPage);\n  //   }\n  // };\n\n  // Helper function to safely get movie release year\n  const getReleaseYear = (releaseDate) => {\n    return releaseDate ? releaseDate.slice(0, 4) : \"Unknown\";\n  };\n\n  return (\n    <div className={css.divGoBack}>\n      <div className={css.divForm}>\n        <form onSubmit={handleSubmit}>\n          <Box\n            className=\"box\"\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: \"10px 0.5px\",\n              gap: \"5px\",\n            }}\n          >\n            <TextField\n              type=\"text\"\n              size=\"small\"\n              onChange={handleInputQuery}\n              value={inputValue}\n              label=\"Search movies\"\n              variant=\"outlined\"\n              sx={{\n                backgroundColor: \"#7e7575\",\n                borderRadius: \"4px\",\n                color: \"white\",\n              }}\n            />\n            <Button type=\"submit\" variant=\"outlined\">\n              Search\n            </Button>\n          </Box>\n        </form>\n      </div>\n      {!query ? (\n        <div>\n          <ul className={css.listMovies}>\n            {defaultMovies.map((mov, index) => (\n              <li key={index}>\n                <Link to={`/${mov.id}`} state={{ from: location }}>\n                  <div className={css.home_div}>\n                    <img\n                      width=\"150px\"\n                      height=\"100%\"\n                      src={\n                        mov.poster_path\n                          ? `https://image.tmdb.org/t/p/w500/${mov.poster_path}`\n                          : \"/placeholder.png\"\n                      }\n                      alt={mov.title || \"Movie Poster\"}\n                    />\n                    {`${mov.title || \"Unknown Title\"} (${getReleaseYear(\n                      mov.release_date\n                    )})`}\n                  </div>\n                </Link>\n              </li>\n            ))}\n          </ul>\n          <BackToTopButton $visible={showBackToTop} onClick={handleBackToTop}>\n            ↑\n          </BackToTopButton>\n        </div>\n      ) : (\n        <div>\n          <ul className={css.listMovies}>\n            {movies.map((mov, index) => (\n              <li key={index}>\n                <Link to={`/${mov.id}`} state={{ from: location }}>\n                  <div className={css.home_div}>\n                    <img\n                      width=\"150px\"\n                      height=\"100%\"\n                      src={\n                        mov.poster_path\n                          ? `https://image.tmdb.org/t/p/w500/${mov.poster_path}`\n                          : \"/placeholder.png\"\n                      }\n                      alt={mov.title || \"Movie Poster\"}\n                    />\n                    {`${mov.title || \"Unknown Title\"} (${getReleaseYear(\n                      mov.release_date\n                    )})`}\n                  </div>\n                </Link>\n              </li>\n            ))}\n          </ul>\n          <Pagination\n            pageCount={totalPages}\n            currentPage={currentPage - 1}\n            setSearchParams={(params) => {\n              setCurrentPage(params.page || 1);\n            }}\n            params={{ query }}\n          />\n          <div className={css.pagination}>\n            {/* <BackToTopButton $visible={showBackToTop} onClick={handleBackToTop}>\n              ↑\n            </BackToTopButton> */}\n          </div>\n        </div>\n      )}\n      {loading && <Loader />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Paginate","styled","ReactPaginate","_templateObject","_taggedTemplateLiteral","props","theme","colors","accent","_ref","buttonShadow","pageCount","setSearchParams","params","currentPage","_jsx","initialPage","nextLabel","onPageChange","e","_objectSpread","page","selected","breakLabel","previousLabel","pageRangeDisplayed","marginPagesDisplayed","renderOnZeroPageCount","onPageActive","window","scrollTo","top","behavior","BackToTopButton","isDarkTheme","_templateObject2","_ref2","$visible","visible","_searchQuery$get","location","useLocation","dispatch","useDispatch","movies","useSelector","selectAllMovies","defaultMovies","selectDefaultMovies","totalPages","selectTotalPages","loading","selectLoading","_useState","useState","_useState2","_slicedToArray","setCurrentPage","_useState3","_useState4","inputValue","setInputValue","_useSearchParams","useSearchParams","_useSearchParams2","searchQuery","setSearchQuery","query","get","_useState5","_useState6","showBackToTop","setShowBackToTop","selectedLanguage","useOutletContext","useEffect","fetchAllMovies","language","fetchDefaultMovies","handleScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","prevPage","scrollY","addEventListener","removeEventListener","getReleaseYear","releaseDate","slice","_jsxs","className","css","children","onSubmit","preventDefault","toast","Box","sx","display","alignItems","justifyContent","padding","gap","TextField","type","size","onChange","event","target","value","trim","toLowerCase","label","variant","backgroundColor","borderRadius","color","Button","map","mov","index","Link","to","concat","id","state","from","width","height","src","poster_path","alt","title","release_date","Pagination","onClick","Loader"],"sourceRoot":""}