{"version":3,"file":"static/js/530.522f44d4.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.params = {\n  api_key: '0649efc971b913d6bfebf656f94b5c92',\n  language: 'en-US',\n};\n\nexport const getAllMoviesTrending = async () => {\n  const { data } = await axios(`3/trending/movie/day`, {\n    // params: {\n    //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n    //   language: 'en-US',\n    // },\n  });\n  console.log(\"getAllMoviesTrending=\",data);\n  return data;\n};\n\nexport const getMoviesTrending = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}`, {});\n  console.log(\"getMoviesTrending=\",data);\n  return data;\n};\n\nexport const getCast = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/credits`);\n  console.log('Cast=', data);\n  return data;\n};\n\nexport const getReviews = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/reviews`);\n  console.log('Reviews =', data);\n  return data;\n};\n\n// ('https://api.themoviedb.org/3/search/movie?query=Jack+Reacher&api_key=0649efc971b913d6bfebf656f94b5c92');\n\nexport const getAllMovies = async value => {\n  const { data } = await axios(`3/search/movie`, {\n    params: {\n      // api_key: '0649efc971b913d6bfebf656f94b5c92',\n      // // language: 'en-US',\n      // original_language: 'en-US',\n      // query: `Jack + Reacher`,\n      query: `${value}`,\n    },\n  });\n  // console.log(value);\n  console.log('getAllMovies=>>', data);\n  return data;\n};\n\n// =============video==================\nexport const getTrailer = async moveId => {\n  try {\n    const { data } = await axios(`3/movie/${moveId}/videos`);\n    if (data.results.length === 0) {\nconsole.log('No trailer available for this movie.');\n      return null;\n    }\n    const trailerKey = data.results[0].key;\n    console.log('getTrailer=>', data);\n    console.log('TrailerKey=>', trailerKey);\n\n//     const youtubeApiResponse = await axios.get(\n//       `https://www.googleapis.com/youtube/v3/videos?id=${trailerKey}&key=YOUR_YOUTUBE_API_KEY&part=snippet,contentDetails`, {params: {\n       \n// id: trailerKey,\n      \n// key: 'YOUR_YOUTUBE_API_KEY',\n//       part: 'snippet,contentDetails',\n//     }}\n//     );\n\n\n\n    const youtubeApiResponse = await axios.get(`https://api.themoviedb.org/3/movie/${trailerKey}/videos?$api_key `\n      )\n\n\n    const trailerData = youtubeApiResponse.data;\n    console.log('Trailer Data:', trailerData);\n\n    return trailerData;\n  } catch (error) {\n    console.error('Error fetching trailer:', error);\n    throw error;\n  }\n};\nexport default getAllMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"listMovies\":\"Movies_listMovies__lbxuM\",\"home\":\"Movies_home__7CsFj\",\"home_div\":\"Movies_home_div__Apmeb\",\"theme-light\":\"Movies_theme-light__qMBFh\",\"input\":\"Movies_input__N3yRL\"};","import React, { useState, useEffect } from \"react\";\nimport { getAllMovies } from \"../api/api\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./Movies.module.css\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nimport { useSearchParams } from \"react-router-dom\";\nconst Movies = () => {\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n\n  // const [searchInput, setSearchInput] = useState(\"\");\n  // const [searchQuery, setSearchQuery] = useState(\"\");\n  // const [searchedMovies, setSearchedMovies] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get(\"query\") ?? \"\";\n\n  // const ref = useRef(query);\n\n  // const params = useParams();\n  // console.log(params);\n  const fetchMovies = async () => {\n    try {\n      const { results } = await getAllMovies(query);\n\n      setMovies((prevMovies) => [...results]);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleInputQuery = (event) => {\n    const textInput = event.target.value.trim().toLowerCase();\n\n    if (textInput) {\n      setSearchQuery({ query: textInput });\n      setInputValue(textInput);\n    } else {\n      setSearchQuery({});\n      setInputValue(\"\");\n    }\n  };\n  //   // Если в event.target.value  пустой обьект то записываем {}}\n  //   // Если в event.target.value не пустой обьект то записываем (query: event.target.value)\n\n  // Вызывается при отправке формы\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!inputValue) {\n      alert(\"Enter your request\");\n\n      return;\n    }\n    fetchMovies();\n    setInputValue(\"\");\n  };\n\n  // console.log(location);\n  return (\n    // <div className={css.divGoBack}>\n\n    <div className={css.divGoBack}>\n      {/* <Link to=\"/\"> Go back</Link> */}\n      <form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            padding: \"10px 5px\",\n            gap: \"5px\",\n          }}\n        >\n          <TextField\n            className={css.input}\n            type=\"text\"\n            //  autocomplete=\"off\"\n            //  autofocus\n            //  placeholder=\"Search images and photos\"\n            name=\"title\"\n            size=\"small\"\n            sx={{ m: 1, width: \"35ch\", margin: 0 }}\n            style={{ backgroundColor: \"#7e7575\", color: \"white\" }}\n            // className=\"form-control\"\n            onChange={handleInputQuery}\n            value={query || \"\"}\n            // Устанавливаем пустую строку, если значение query равно null\n            id=\"input-with-sx\"\n            label=\"Search movies\"\n            variant=\"outlined\"\n\n            // margin=\"dense\"\n          />\n          <Button\n            className={css.button}\n            type=\"submit\"\n            variant=\"outlined\"\n            style={{\n              padding: \"6.5px\",\n            }}\n          >\n            Search\n          </Button>\n        </Box>\n\n        <Stack spacing={2} direction=\"row\"></Stack>\n      </form>\n\n      <ul className={css.listMovies}>\n        {movies.map((mov, index) => {\n          return (\n            <li key={index}>\n              <Link to={`/${mov.id}`} state={{ from: location }}>\n                <div className={css.home_div}>\n                  <img\n                    className=\"center-block img-responsive\"\n                    width=\"150px\"\n                    height=\"100%\"\n                    src={`https://image.tmdb.org/t/p/w500/${mov.poster_path}`}\n                    alt={mov.title}\n                    data-reactid=\".1.1.0.0.1.0.0.0\"\n                    key=\"movie-poster\"\n                  />\n                  {/* {mov.title} */}\n                  {`${mov.title} (${mov.release_date.slice(0, 4)})`}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\n// 2 вариант без кнопки поиска\n// import React, { useState, useEffect } from \"react\";\n// import { getAllMovies } from \"../api/api\";\n// import { Link, useLocation, useParams } from \"react-router-dom\";\n// import css from \"./Movies.module.css\";\n\n// import TextField from \"@mui/material/TextField\";\n// import Box from \"@mui/material/Box\";\n// import Stack from \"@mui/material/Stack\";\n// import Button from \"@mui/material/Button\";\n\n// import { useSearchParams } from \"react-router-dom\";\n// const Movies = () => {\n//   const { moveId } = useParams();\n//   console.log(\"moveId=??????\", moveId);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get(\"query\") ?? \"\";\n//   // console.log(query);\n//   const [movies, setMovies] = useState([]);\n//   const [error, setError] = useState(null);\n//   const location = useLocation();\n//   // const params = useParams();\n//   // console.log(params);\n//   const fetchMovies = async () => {\n//     try {\n//       const { results } = await getAllMovies(query);\n//       //   console.log(results);\n//       setMovies((prevMovies) => [...results]);\n//     } catch (err) {\n//       setError(error.message);\n//     }\n//   };\n//   //   console.log(movies);\n//   useEffect(() => {\n//     fetchMovies();\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [query]);\n\n//   const updateQueryString = (event) => {\n//     const moviesIdVaiue = event.target.value.trim();\n//     if (moviesIdVaiue === \"\") {\n//       return setSearchParams({});\n//     }\n//     setSearchParams({ query: moviesIdVaiue });\n//     // Если в event.target.value  пустой обьект то записываем {}}\n//     // Если в event.target.value не пустой обьект то записываем (query: event.target.value)\n//   };\n//   // const visibleMovies = movies.filter((movie) => movie.includes(query));\n//   console.log(location);\n\n//   return (\n//     // <div className={css.divGoBack}>\n\n//     <div className={css.divGoBack}>\n//       <Link to=\"/\"> Go back</Link>\n//       <Box\n//         sx={{\n//           display: \"flex\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <TextField\n//           //  className=\"input\"\n//           type=\"text\"\n//           //  autocomplete=\"off\"\n//           //  autofocus\n//           //  placeholder=\"Search images and photos\"\n//           name=\"title\"\n//           size=\"small\"\n//           sx={{ m: 1, width: \"35ch\" }}\n//           style={{ backgroundColor: \"white\" }}\n//           className=\"form-control\"\n//           onChange={updateQueryString}\n//           value={query || \"\"} // Устанавливаем пустую строку, если значение query равно null\n//           id=\"input-with-sx\"\n//           label=\"Search movies\"\n//           variant=\"outlined\"\n//           margin=\"dense\"\n//         />\n//         <Button variant=\"outlined\">Search</Button>\n//       </Box>\n\n//       <Stack spacing={2} direction=\"row\"></Stack>\n\n//       <p>Movies страница</p>\n//       <ul className={css.listMovies}>\n//         {movies.map((movie, index) => {\n//           return (\n//             <li key={index}>\n//               <Link to={`${movie.id}`} state={{ from: location }}>\n//                 {movie.title}\n//               </Link>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     </div>\n//     // </div>\n//   );\n// };\n// export default Movies;\n"],"names":["axios","api_key","language","getAllMoviesTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios","data","_context","prev","next","sent","console","log","abrupt","stop","apply","arguments","getMoviesTrending","_ref2","_callee2","moveId","_yield$axios2","_context2","concat","_x","getCast","_ref3","_callee3","_yield$axios3","_context3","_x2","getReviews","_ref4","_callee4","_yield$axios4","_context4","_x3","getAllMovies","_ref5","_callee5","value","_yield$axios5","_context5","params","query","_x4","_searchQuery$get","location","useLocation","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","inputValue","setInputValue","_useSearchParams","useSearchParams","_useSearchParams2","searchQuery","setSearchQuery","get","fetchMovies","_yield$getAllMovies","results","prevMovies","_toConsumableArray","t0","message","useEffect","_jsxs","className","css","children","onSubmit","e","preventDefault","alert","Box","sx","display","alignItems","justifyContent","padding","gap","_jsx","TextField","type","name","size","m","width","margin","style","backgroundColor","color","onChange","event","textInput","target","trim","toLowerCase","id","label","variant","Button","Stack","spacing","direction","map","mov","index","Link","to","state","from","height","src","poster_path","alt","title","release_date","slice"],"sourceRoot":""}