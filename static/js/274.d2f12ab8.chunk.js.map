{"version":3,"file":"static/js/274.d2f12ab8.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MoviesDetails.module.css?248e","components/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.params = {\n  api_key: '0649efc971b913d6bfebf656f94b5c92',\n  language: 'en-US',\n};\n\nexport const getAllMoviesTrending = async () => {\n  const { data } = await axios(`3/trending/movie/day`, {\n    // params: {\n    //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n    //   language: 'en-US',\n    // },\n  });\n  console.log('getAllMoviesTrending=', data);\n  return data;\n};\n\nexport const getMoviesTrending = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}`, {});\n  console.log('getMoviesTrending=', data);\n  return data;\n};\n\nexport const getCast = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/credits`);\n  // console.log('Cast=', data);\n  return data;\n};\n\nexport const getReviews = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/reviews`);\n  // console.log('Reviews =', data);\n  return data;\n};\n\nexport const getVideos = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/videos`);\n  console.log('videos=', data);\n  return data;\n};\n\n// =============video==================\n// export const getTrailer = async moveId => {\n//   // const { data } = await axios(`3/movie/${moveId}/homepage`);\n//   const { data } = await axios(`3/movie/${moveId}`, {});\n//   console.log('homepage(Trailer)=', data);\n//   return data;\n// };\n\n// ('https://api.themoviedb.org/3/search/movie?query=Jack+Reacher&api_key=0649efc971b913d6bfebf656f94b5c92');\n\nexport const getAllMovies = async value => {\n  const { data } = await axios(`3/search/movie`, {\n    params: {\n      // api_key: '0649efc971b913d6bfebf656f94b5c92',\n      // // language: 'en-US',\n      // original_language: 'en-US',\n      // query: `Jack + Reacher`,\n      query: `${value}`,\n    },\n  });\n  // console.log(value);\n  console.log('getAllMovies=>>', data);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"divGoBack\":\"MoviesDetails_divGoBack__NYjGe\",\"GoBack\":\"MoviesDetails_GoBack__rXay-\",\"divDetails\":\"MoviesDetails_divDetails__MRggn\",\"listCast\":\"MoviesDetails_listCast__8uDxb\",\"img\":\"MoviesDetails_img__qPO0V\",\"title\":\"MoviesDetails_title__sF6b5\"};","import React, { useState, useEffect, Suspense, useRef } from \"react\";\nimport { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { getMoviesTrending } from \"../api/api\";\nimport css from \"./MoviesDetails.module.css\";\nimport Loader from \"./Loader/Loader\";\nconst MoviesDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(\n    (location.state && location.state.from) ?? \"/movies\"\n  );\n  // console.log(location);\n  // console.log(backLinkLocationRef);\n  const { movieId } = useParams();\n\n  const [title, setTitle] = useState(null);\n  const [poster_path, setPoster_path] = useState(null);\n  const [release_date, setRelease_date] = useState(null);\n  const [overview, setOverview] = useState(null);\n  const [vote_average, setVote_average] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const fetchMovies = async () => {\n    try {\n      const {\n        poster_path,\n        title,\n        overview,\n        release_date,\n        vote_average,\n        genres,\n      } = await getMoviesTrending(movieId);\n      setTitle(title);\n      const [year, month, day] = release_date.split(\"-\");\n\n      // Преобразование месяца из числового формата в текстовый\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      const monthName = months[parseInt(month, 10) - 1];\n\n      // Объединение в нужном формате\n      const formattedDate = `${day} ${monthName} ${year}`;\n\n      // console.log(formattedDate);\n      // Вывод: \"27 February 2024\"\n\n      setRelease_date(formattedDate);\n      setPoster_path(poster_path);\n\n      // setRelease_date(release_date.slice(0, 4));\n\n      setOverview(overview);\n      setVote_average(Math.round(vote_average * 10));\n      setGenres((prevGenres) => [...genres]);\n\n      // console.log(poster_path);\n      // console.log(title);\n      // console.log(release_date);\n    } catch (err) {\n      setError(error.message);\n    }\n  };\n  // console.log(movies);\n  useEffect(() => {\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  // console.log(location);\n  return (\n    <div className={css.divGoBack}>\n      <Link className={css.GoBack} to={backLinkLocationRef.current}>\n        <button type=\"button\">Go back</button>\n      </Link>\n\n      {/* <Link to={location.state?.from ??'/movies'}> Go back</Link> */}\n      <div className={css.divDetails}>\n        <img\n          // className=\"center-block img-responsive\"\n          className={css.img}\n          width=\"250px\"\n          // height=\"100%\"\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n          data-reactid=\".1.1.0.0.1.0.0.0\"\n          key=\"movie-poster\"\n        />\n        <div>\n          {/* <h2>{`${title}(${release_date})`}</h2> */}\n          <h2>{`${title}`}</h2>\n          <h4>{release_date}</h4>\n          <p>User Score:{` ${vote_average}%`}</p>\n          <h3>Overview</h3>\n          <>{overview}</>\n          <h3>Genres</h3>\n          {genres.map((genre, index) => {\n            return <p key={index}>{genre.name} </p>;\n          })}\n        </div>\n      </div>\n      <div>\n        <p className={css.title}>Additional information</p>\n        <ul className={css.listCast}>\n          {/* <li>\n            <NavLink to={`/movies/${moveId}/cast`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`/movies/${moveId}/reviews`}>Reviews</NavLink>\n          </li> */}\n          <li>\n            <Link to=\"trailer\">Trailer</Link>\n          </li>\n\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        {/* <Suspense fallback={<div>Laoding...</div>}> */}\n        <Suspense fallback={<div>{Loader()}</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\nexport default MoviesDetails;\n"],"names":["axios","api_key","language","getAllMoviesTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios","data","_context","prev","next","sent","console","log","abrupt","stop","apply","arguments","getMoviesTrending","_ref2","_callee2","moveId","_yield$axios2","_context2","concat","_x","getCast","_ref3","_callee3","_yield$axios3","_context3","_x2","getReviews","_ref4","_callee4","_yield$axios4","_context4","_x3","getAllMovies","_ref6","_callee6","value","_yield$axios6","_context6","params","query","_x5","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","poster_path","setPoster_path","_useState5","_useState6","release_date","setRelease_date","_useState7","_useState8","overview","setOverview","_useState9","_useState10","vote_average","setVote_average","_useState11","_useState12","genres","setGenres","_useState13","_useState14","error","setError","fetchMovies","_yield$getMoviesTrend","_poster_path","_title","_overview","_release_date","_vote_average","_genres","_release_date$split","_release_date$split2","year","month","day","monthName","formattedDate","split","parseInt","Math","round","prevGenres","_toConsumableArray","t0","message","useEffect","_jsxs","className","css","children","_jsx","Link","to","current","type","width","src","alt","_Fragment","map","genre","index","name","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}